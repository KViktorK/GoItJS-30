/* 1. Напиши класс User для создания пользователя со следующим свойствами:

a. username - имя, строка
b. age - возраст, число
c. numberOfPosts - кол-во постов, число
d. Класс ожидает 1 параметр - объект настроек с одноимёнными свойствами.

Добавь метод getInfo(), который, возвращает строку: User ${имя} is ${возраст} years old 
and has ${кол-во постов} posts. */

// -----------------

/* 2. Напиши класс Storage который создаёт объекты для управления складом товаров. 
При вызове будет получать один аргумент - начальный массив товаров, и записывать его в свойство items.

Добавь методы класса:

a. getItems() - возвращает массив товаров.
b. addItem(item) - получает новый товар и добавляет его к текущим.
c. removeItem(item) - получет товар и, если он есть, удаляет его из текущих. */

// -----------------

/* 3. Напиши класс Client который создаёт объект со свойствами login и email. 
Объяви приватные свойства #login и #email, доступ к которым сделай 
через геттер и сеттер login и email. */

// -----------------

/* 4. Напиши класс Notes который управляет коллекцией заметок в свойстве items. 
Заметка это объект со свойствами text и priority. 
Добавь классу статическое свойство Priority, в котором будет храниться объект с приоритетами. 

Добавь методы addNote(note), removeNote(text) и updateNotePriority(text, newPriority). */

// -----------------

/*
  5. Создать класс Worker у которого есть свойства name, surname, age, position, salary.
     У класса Worker есть метод getSalary.
     Создать класс TopLevelWorker у которого есть свойство hierarchyLevel и который 
     наследует класс Worker, добавляя метод getHierarchyLevel

     Реализовать задачу с помощью ES5 прототипов и ES6 классов
*/

const HIERARCHY_LEVEL = {
  TOP: "top",
  BOTTOM: "bottom"
};
